const { Storage } = require('@google-cloud/storage');
const { BigQuery } = require('@google-cloud/bigquery');

const storage = new Storage();
const bigquery = new BigQuery();

const sourceBucketName = 'cit41200-pdffiles'; // Source bucket
const benignBucketName = 'cit41200-benign';
const maliciousBucketName = 'cit41200-malicious';

exports.sortPDFFiles = async (event) => {
    // Check if event has data and a name property
    if (!event || !event.name) {
        console.error('No file name in event, aborting function.');
        return;
    }

    const fileName = event.name;  // 'name' should contain the uploaded file name
    console.log(`New file uploaded: ${fileName}`);

    try {
        // Query classification from BigQuery
        const classification = await getClassificationFromBigQuery(fileName);

        if (classification) {
            console.log(`Class of the file ${fileName}: ${classification}`);
            await moveFile(sourceBucketName, classification === 'Malicious' ? maliciousBucketName : benignBucketName, fileName);
            console.log(`File ${fileName} moved to ${classification === 'Malicious' ? maliciousBucketName : benignBucketName}`);
        } else {
            console.warn(`No classification found for file: ${fileName}`);
        }
    } catch (error) {
        console.error('Failed to process file:', error);
    }
};

async function getClassificationFromBigQuery(fileName) {
    const query = `
        SELECT Class
        FROM \`midterm_malware.CSV_File\`
        WHERE filename = @fileName
    `;
    const options = {
        query: query,
        params: { fileName: fileName },
        location: 'US', 
    };

    const [job] = await bigquery.createQueryJob(options);
    const [rows] = await job.getQueryResults();
    return rows.length > 0 ? rows[0].Class.trim() : null;
}

async function moveFile(sourceBucketName, destinationBucketName, fileName) {
    const sourceBucket = storage.bucket(sourceBucketName);
    const destinationBucket = storage.bucket(destinationBucketName);
    const file = sourceBucket.file(fileName);
    await file.move(destinationBucket.file(fileName));
}

exports.countPDF = async (req, res) => {
    try {
        const countBenign = await countFilesInBucket(benignBucketName);
        const countMalicious = await countFilesInBucket(maliciousBucketName);
        res.status(200).send(`Benign files: ${countBenign}, Malicious files: ${countMalicious}`);
    } catch (error) {
        console.error('Error counting files:', error);
        res.status(500).send('Error counting files');
    }
};

async function countFilesInBucket(bucketName) {
    const bucket = storage.bucket(bucketName);
    const [files] = await bucket.getFiles();
    return files.length;
}
